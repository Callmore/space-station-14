using Content.Client.Chemistry.Containers.EntitySystems;
using Content.Client.UserInterface.Controls;
using Content.Shared.Chemistry.Components;
using Content.Shared.Chemistry.Components.SolutionManager;
using Content.Shared.SmartFridge;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Containers;
using Serilog;
using System.Numerics;
using static Robust.Client.UserInterface.Controls.BaseButton;

namespace Content.Client.SmartFridge.UI;

[GenerateTypedNameReferences]
public sealed partial class SmartFridgeMenu : FancyWindow
{
    [Dependency] private readonly EntityManager _entityManager = default!;

    [Dependency] private readonly ILogManager _logManager = default!;

    public event Action<SmartFridgeInventoryEntry, int>? OnItemDispensed;

    public SmartFridgeMenu()
    {
        MinSize = SetSize = new Vector2(250, 150);
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        // SmartFridgeItems.AddItem("TEST ITEM");

        // foreach (var item in SmartFridgeItems)
        // {

        // }
    }

    public void Populate(List<SmartFridgeInventoryGroup> entities)
    {
        SmartFridgeItems.RemoveAllChildren();

        var log = _logManager.GetSawmill("SmartFridge");

        foreach (var group in entities)
        {
            var catagory = new SmartFridgeMenuCatagory();
            catagory.CatagoryName.Text = group.Name;

            // TODO: List entries!
            foreach (var item in group.Items)
            {
                if (!_entityManager.TryGetEntity(item.VisualReference, out var uid))
                {
                    continue;
                }

                var name = item.ItemName;
                if (item.UnitCount > 0)
                {
                    name = $"{name} ({item.UnitCount}u)";
                }

                var uiItem = new SmartFridgeMenuItem
                {
                    Item = item,
                    ItemName = {
                        Text = name,
                    },
                    Amount = {
                        Text = $"[{item.Ammount}]",
                    }
                };

                uiItem.DispenseButton1.OnPressed += (args) =>
                {
                    OnItemDispensed?.Invoke(item, 1);
                };
                uiItem.DispenseButton5.OnPressed += (args) =>
                {
                    OnItemDispensed?.Invoke(item, 5);
                };
                uiItem.DispenseButton10.OnPressed += (args) =>
                {
                    OnItemDispensed?.Invoke(item, 10);
                };
                uiItem.DispenseButtonAll.OnPressed += (args) =>
                {
                    OnItemDispensed?.Invoke(item, -1);
                };

                catagory.Contents.AddChild(uiItem);
            }
            SmartFridgeItems.AddChild(catagory);
        }
    }
}
